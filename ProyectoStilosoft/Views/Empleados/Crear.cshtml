@model ProyectoStilosoft.ViewModels.Empleados.EmpleadoViewModel

@{
    ViewData["Title"] = "Crear Empleado";
}

@section Styles{
    <link href="~/css/ValidacionesCSS/Validaciones.css" rel="stylesheet" />
}
<hr />
<section class="content pt-3 pl-3 pr-3">
    <form asp-action="Crear" asp-controller="Empleados" method="post" id="formulario">
        <div class="row">
            <div class="col-4 pr-5">
                <h3>Empleado</h3>
                <div class="form-group" id="grupo__nombre">
                    <label asp-for="Nombre" class="control-label"></label>
                    <input asp-for="Nombre" id="nombre" name="nombre" class="form-control" />
                    <p class="formulario__input-error">El nombre tiene que ser de 3 a 30 dígitos y solo puede contener letras</p>
                </div>
                <div class="form-group" id="grupo__apellidos">
                    <label asp-for="Apellidos" class="control-label"></label>
                    <input asp-for="Apellidos" id="apellidos" name="apellidos" class="form-control" />
                    <p class="formulario__input-error">El apellido tiene que ser de 3 a 30 dígitos y solo puede contener letras</p>
                </div>
                <div class="form-group" id="grupo__fechaNacimiento">
                    <label asp-for="FechaNacimiento" class="control-label"></label>
                    <input type="date" asp-for="FechaNacimiento" min="1970-01-01" id="fechaNacimiento" name="fechaNacimiento" class="form-control" />
                    <p class="formulario__input-error">La edad debe ser mayor a los 18 años</p>
                </div>
                <div class="form-group" id="grupo__documento">
                    <label asp-for="Documento" class="control-label"></label>
                    <input asp-for="Documento" type="text" id="documento" name="documento" class="form-control" />
                    <p class="formulario__input-error">El documento tiene que ser de 6 a 15 dígitos y solo puede contener números</p>
                </div>
                <div class="form-group" id="grupo__email">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" id="email" name="email" class="form-control" placeholder="Correo@hotmail.com"/>
                    <p class="formulario__input-error">El email solo puede contener letras, números, puntos, guiones y guion bajo</p>
                </div>
                <div class="form-group" id="grupo__password">
                    <label asp-for="Password" class="control-label"></label>
                    <input type="password" asp-for="Password" id="password" name="password" class="form-control" />
                    <p class="formulario__input-error">La contraseña tiene que ser de 6 a 30 dígitos</p>
                </div>
                <div id="formulario__mensaje" class="formulario__mensaje">
                    <p><b>Error:</b> Rellene el formulario correctamente</p>
                </div>
                <br />
                <div class="form-group">
                    <button id="crearEmpleado" type="submit" class="btn btn-info mt-4 mr-5">Crear empleado</button>
                </div>
            </div>
            <div class="col-6 pr-5 pl-5">
                <h3>Servicios *</h3>
                <select id="servicio" class="form-control">
                    <option value="seleccione">Seleccione</option>
                    @foreach (var item in Model.Servicios)
                    {
                        <option duracion="@item.Duracion" value="@item.ServicioId">@item.Nombre</option>
                    }
                </select><br />
                    <div class="form-group">
                        <button id="agregarServicioBtn" onclick="agregarServicio()" type="button" class="btn btn-primary" >Agregar servicio</button>
                    </div>
                <br />
                <h2>Lista de servicios</h2>
                <table id="tablaServicios" class="table table-bordered">
                    <thead>
                        <tr>
                            <td>Nombre</td>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table><br />
                <button type="button" class="btn btn-danger" onclick="eliminarServicio()"><i class="fas fa-trash-alt"></i> Eliminar servicio</button>
            </div>
        </div>
    </form><br />
</section>
<script src="~/js/validacionesEmpleado/Validaciones.js"></script>
@section Scripts{

}
<script>
    var totalServicios = 0;
    var contServicios = 0;

    function agregarServicio() {
        let servicio = $("#servicio option:selected");
        let servicioId = $("#servicio option:selected").val();
        let servicioText = $("#servicio option:selected").text();

        if (servicioText != '' && servicioText != 'Seleccione') {
            $("#tablaServicios").append(`
            <tr id="${contServicios}">
                <td>
                    <input type="hidden" id="servicio${contServicios}" name="EmpleadoServicios[${contServicios}].ServicioId" value="${servicioId}" />
                    ${servicioText}
                </td>
            </tr>
            `);
            contServicios++;

            $("#servicio option[value='" + servicioId + "']").hide();
            $("#servicio option:eq(0)").prop('selected', 'selected');
            if (contServicios > 20) {
            $("#agregarServicioBtn").prop("disabled", true);
            }
            if (contServicios => 1) {
                $("#crearEmpleado").prop("disabled", false);
            }
        }        
    }

    function eliminarServicio() {
        contServicios--;
        let servicioId = $("#servicio" + contServicios).val();
        $("#servicio option[value='" + servicioId + "']").show();
        $("#" + contServicios).remove();
        if (contServicios < 20) {
            $("#agregarServicioBtn").prop("disabled", false);
        }
        if (contServicios == 0) {
            $("#crearEmpleado").prop("disabled", true);
        }
    }
    document.getElementById('fechaNacimiento').addEventListener('change', () => {
        let fecha = document.getElementById('fechaNacimiento').value;
        let fechaInput = new Date(fecha);
        let fechaActual = new Date();
        let edad = fechaActual.getFullYear() - fechaInput.getFullYear()
        console.log(`edad: ${fechaActual.getFullYear() - fechaInput.getFullYear()}`)
        if (edad < 18 || edad > 100) {
            document.querySelector('#grupo__fechaNacimiento .formulario__input-error').classList.add('formulario__input-error-activo');
        } else {
            document.querySelector('#grupo__fechaNacimiento .formulario__input-error').classList.remove('formulario__input-error-activo');
        }
    });

    document.getElementById('fechaNacimiento').valueAsDate = new Date();
</script>