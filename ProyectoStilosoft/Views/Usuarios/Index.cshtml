@model IEnumerable<Stilosoft.Model.Entities.Usuario>

@{
    ViewData["Title"] = "Usuarios";
}

<hr>
<section class="content">
    <p>
        <a onclick="mostrarModalS('@Url.Action("CrearUsuario","Usuarios","null",Context.Request.Scheme)','Registrar Usuario')" class="btn btn-success"> Registrar Usuario</a>
    </p>
    <table class="table" id="tabla">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nombre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Apellido)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Numero)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Documento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IdentityUser.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rol)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th>
                    Acciones
                </th>
                <th>
                    Cambiar contraseña
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Apellido)
                    </td>
                        @if (item.Numero != "0")
                        {
                            <td>@Html.DisplayFor(modelItem => item.Numero)</td>
                        }
                        else
                        {
                              <td>N/A</td>
                        }
                    
                    <td>
                        @Html.DisplayFor(modelItem => item.Documento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdentityUser.Email)
                    </td>
                    <th>
                        @Html.DisplayFor(modelItem => item.Rol)
                    </th>
                    <td>
                        @if (item.Estado == true)
                        {
                            <form asp-action="EditarEstado" asp-route-id="@item.UsuarioId">
                                <button type="submit"><i class="fas fa-toggle-on"></i></button>
                            </form>
                        }
                        else if (item.Estado == false)
                        {
                            <form asp-action="EditarEstado" asp-route-id="@item.UsuarioId">
                                <button type="submit"><i class="fas fa-toggle-off"></i></button>
                            </form>
                        }
                    </td>
                    <td>
                        @if (item.Rol != "Empleado")
                        {
                            <a onclick="mostrarModalS('@Url.Action("Editar","Usuarios", new {id = item.UsuarioId}, Context.Request.Scheme)', 'Editar usuario')" class="btn btn-dark"><i class="fas fa-pencil-alt"></i></a>
                        }                       
                    </td>
                    <td>
                        <a onclick="mostrarModalS('@Url.Action("ResetPassword","Usuarios", new {id = item.UsuarioId}, Context.Request.Scheme)', 'Cambiar contraseña')" class="btn btn-dark"><i class="fa fa-lock"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</section>
<br />
@section Scripts{

    <script src="~/js/tabla.js"></script>
    <script src="~/js/modals.js"></script>
    <script>
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Crear")) { <text>
                  alertify.alert('Guardar usuario', '@TempData["Mensaje"]', function () { alertify.success('Usuario guardado'); });
                 </text>
        }
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Error")) { <text>
        alertify.alert('Error', '@TempData["Mensaje"]', function () {});
                 </text>
        }
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Eliminar")) { <text>
        alertify.alert('Eliminar Usuario', '@TempData["Mensaje"]', function () { alertify.error('Usuario eliminado'); });
                 </text>
        }
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Editar")) { <text>
        alertify.alert('Editar Usuario', '@TempData["Mensaje"]', function () { alertify.success('Usuario editado'); });
                 </text>
        }
        @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("EditarEstado")) { <text>
        alertify.success('Estado cambiado correctamente.');
                 </text>
        }
         @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Cambiar contraseña")) { <text>
        alertify.alert('Cambiar contraseña', '@TempData["Mensaje"]', function () { alertify.success('Usuario cambio de contraseña'); });
                 </text>
        }
    </script>
}